[gd_resource type="ShaderMaterial" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=4]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=5]

[sub_resource type="VisualShaderNodeColorConstant" id=6]
constant = Color( 0.341712, 0.335644, 0.93712, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 12

[sub_resource type="VisualShader" id=9]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Color:7
	vec3 n_out7p0 = vec3(0.341712, 0.335644, 0.937120);
	float n_out7p1 = 1.000000;

// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// VectorDecompose:6
	float n_out6p0 = n_out5p0.x;
	float n_out6p1 = n_out5p0.y;
	float n_out6p2 = n_out5p0.z;

// ScalarOp:4
	float n_in4p1 = 0.50000;
	float n_out4p0 = n_out6p1 - n_in4p1;

// ScalarOp:8
	float n_in8p1 = 2.00000;
	float n_out8p0 = n_out4p0 * n_in8p1;

// ScalarFunc:9
	float n_out9p0 = abs(n_out8p0);

// ScalarOp:10
	float n_in10p0 = 1.00000;
	float n_out10p0 = n_in10p0 - n_out9p0;

// Output:0
	COLOR.rgb = n_out7p0;
	COLOR.a = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -345.528, 41.0971 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1740, 200 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -60, 360 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -1040, 380 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( -560, 360 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( 1280, 120 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 320, 360 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( 720, 420 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 1180, 320 )
nodes/fragment/connections = PoolIntArray( 5, 0, 6, 0, 6, 1, 4, 0, 4, 0, 8, 0, 8, 0, 9, 0, 9, 0, 10, 1, 10, 0, 0, 1, 7, 0, 0, 0 )

[resource]
shader = SubResource( 9 )
